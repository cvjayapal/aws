AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  CognitoDomain:
    Type: String
    MinLength: 3
    MaxLength: 63
    AllowedPattern: ^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$
    Description: Enter a string. Must be alpha numeric 3-63 in length.
  Stage:
    Type: String
    Description: Unique Auth Name for Cognito Resources
  CallbackURL:
    Type: String
    Description: Unique Auth Name for Cognito Resources 
  LogoutURL:
    Type: String
    Description: Unique Auth Name for Cognito Resources
  product:
    Type: String
    Default: common
  ecosystem:
    Type: String
    Default: resi
  appfeature:
    Type: String
    Default: foundation
    

Resources:
  SNSRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub pentairadmin-SMS-Role-${Stage}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cognito-idp.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "CognitoSNSPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "sns:publish"
                Resource: "*"
      Tags:
        - Key: "product"
          Value: !Ref product
        - Key: "ecosystem"
          Value: !Ref ecosystem
        - Key: "stage"
          Value: !Ref Stage
        - Key: "costcenter"
          Value: !Join [ ':', [!Ref product, !Ref ecosystem, !Ref Stage] ]
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameConfiguration: 
        CaseSensitive: false
      AutoVerifiedAttributes:
        - email
      MfaConfiguration: OPTIONAL
      EnabledMfas:
        - SOFTWARE_TOKEN_MFA
        - SMS_MFA
      SmsConfiguration:
        ExternalId: !Sub ${Stage}-external
        SnsCallerArn: !GetAtt SNSRole.Arn
      UserPoolName: "pentair-dev-admin-storybook"
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
        UnusedAccountValidityDays: 90
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      AllowedOAuthFlowsUserPoolClient: true
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      ClientName: "story"
      CallbackURLs:
        - !Ref CallbackURL
      LogoutURLs:
        - !Ref LogoutURL
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref CognitoDomain
      UserPoolId: !Ref UserPool
      

Outputs:
  CognitoUserPoolID:
    Value: !Ref UserPool
    Description: The UserPool ID
  CognitoAppClientID:
    Value: !Ref UserPoolClient
    Description: The app client
  HostedUIURL:
    Value: !Sub https://${CognitoDomain}.auth.us-west-2.amazoncognito.com/login?client_id=${UserPoolClient}&response_type=code&scope=email+openid+phone+profile&redirect_uri=http://localhost:3000
    Description: The hosted UI URL